{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { React, useState } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Loading from \"../components/Loading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AddCollection(_ref) {\n  var showmodal = _ref.showmodal,\n      changeshowmodal = _ref.changeshowmodal,\n      load_collections = _ref.load_collections;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      name_chg = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      desc = _useState4[0],\n      desc_chg = _useState4[1];\n\n  var storage_userid = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@user_id\"));\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", null);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      load = _useState6[0],\n      load_chg = _useState6[1];\n\n  var add_coll_submit = function _callee4(name, desc) {\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            load_chg(true);\n            storage_userid().then(function _callee3(user_id) {\n              return _regeneratorRuntime.async(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return _regeneratorRuntime.awrap(fetch(\"http://192.168.8.142:3000/collection/\", {\n                        method: \"POST\",\n                        headers: {\n                          Accept: \"application/json\",\n                          \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                          name: name,\n                          description: desc,\n                          id: user_id\n                        })\n                      }).then(function _callee2(response) {\n                        var res;\n                        return _regeneratorRuntime.async(function _callee2$(_context2) {\n                          while (1) {\n                            switch (_context2.prev = _context2.next) {\n                              case 0:\n                                _context2.next = 2;\n                                return _regeneratorRuntime.awrap(response.json());\n\n                              case 2:\n                                res = _context2.sent;\n\n                                if (res.message == \"Success\") {\n                                  name_chg(\"\");\n                                  desc_chg(\"\");\n                                  load_collections(res.data.collection_ids);\n                                  changeshowmodal(false);\n                                  load_chg(false);\n                                } else if (res.message == \"Fail\") {\n                                  console.log(\"Fail\");\n                                }\n\n                              case 4:\n                              case \"end\":\n                                return _context2.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }).catch(function (error) {\n                        console.error(error);\n                      }));\n\n                    case 2:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(Modal, {\n    style: styles.modalcontainer,\n    animationType: \"slide\",\n    visible: showmodal,\n    children: [load == true ? _jsx(Loading, {}) : null, _jsxs(View, {\n      style: styles.modalform,\n      children: [_jsx(Text, {\n        style: styles.header,\n        children: \"Add Collection\"\n      }), _jsx(TextInput, {\n        style: styles.text_box,\n        placeholder: \"Collection name\",\n        defaultValue: name,\n        onChangeText: function onChangeText(new_name) {\n          return name_chg(new_name);\n        }\n      }), _jsx(TextInput, {\n        style: styles.text_box,\n        defaultValue: desc,\n        onChangeText: function onChangeText(new_desc) {\n          return desc_chg(new_desc);\n        },\n        placeholder: \"Collection description\"\n      }), _jsxs(View, {\n        style: styles.btncontainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.Sign_in_btn,\n          onPress: function onPress() {\n            return changeshowmodal(false);\n          },\n          children: _jsx(Text, {\n            style: styles.btn_label,\n            children: \"Cancel\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.Sign_in_btn,\n          onPress: function onPress() {\n            return add_coll_submit(name, desc);\n          },\n          children: _jsx(Text, {\n            style: styles.btn_label,\n            children: \"Add\"\n          })\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  modalcontainer: {},\n  modalform: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: 250\n  },\n  header: {\n    fontSize: 20\n  },\n  text_box: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#000\",\n    borderRadius: 10,\n    height: 45,\n    padding: 10,\n    margin: 10,\n    fontSize: 16,\n    width: 300\n  },\n  btncontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: 300\n  },\n  Sign_in_btn: {\n    backgroundColor: \"#a5a5a5\",\n    height: 50,\n    width: 130,\n    margin: 3,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    borderRadius: 15,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  btn_label: {\n    fontWeight: \"bold\",\n    fontSize: 15,\n    color: \"#fff\"\n  }\n});",
  "map": {
    "version": 3,
    "names": [
      "React",
      "useState",
      "AsyncStorage",
      "Loading",
      "AddCollection",
      "showmodal",
      "changeshowmodal",
      "load_collections",
      "name",
      "name_chg",
      "desc",
      "desc_chg",
      "storage_userid",
      "getItem",
      "console",
      "log",
      "load",
      "load_chg",
      "add_coll_submit",
      "then",
      "user_id",
      "fetch",
      "method",
      "headers",
      "Accept",
      "body",
      "JSON",
      "stringify",
      "description",
      "id",
      "response",
      "json",
      "res",
      "message",
      "data",
      "collection_ids",
      "catch",
      "error",
      "styles",
      "modalcontainer",
      "modalform",
      "header",
      "text_box",
      "new_name",
      "new_desc",
      "btncontainer",
      "Sign_in_btn",
      "btn_label",
      "StyleSheet",
      "create",
      "display",
      "flexDirection",
      "alignItems",
      "marginTop",
      "fontSize",
      "backgroundColor",
      "color",
      "borderRadius",
      "height",
      "padding",
      "margin",
      "width",
      "justifyContent",
      "marginLeft",
      "marginRight",
      "fontWeight"
    ],
    "sources": [
      "/home/panda/Desktop/Clients/Jaja or Junior/android-expo-app/client/components/AddCollection.js"
    ],
    "sourcesContent": [
      "import {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Modal\n} from \"react-native\";\nimport { React, useState } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Loading from \"../components/Loading\";\n\nexport default function AddCollection({ showmodal, changeshowmodal,load_collections}) {\n  const [name, name_chg] = useState(\"\");\n  const [desc, desc_chg] = useState(\"\");\n  const storage_userid = async () => {\n    try {\n      return await AsyncStorage.getItem(\"@user_id\");\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  };\n  const [load, load_chg] = useState(false);\n\n  const add_coll_submit = async (name, desc) => {\n    load_chg(true)\n  storage_userid().then(async (user_id)=>{\n    await fetch(\"http://192.168.8.142:3000/collection/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        description: desc,\n        id:user_id\n      }),\n    })\n      .then(async (response) => {\n        let res = await response.json();\n        if (res.message == \"Success\") {\n          name_chg(\"\")\n          desc_chg(\"\")\n          load_collections(res.data.collection_ids)\n          changeshowmodal(false)\n          load_chg(false)\n        } else if (res.message == \"Fail\") {\n          console.log(\"Fail\");\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  })\n  };\n  return (\n    <Modal  style={styles.modalcontainer} animationType=\"slide\" visible={showmodal}>\n      {load == true ? <Loading /> : null}\n      <View style={styles.modalform}>\n        <Text style={styles.header}>Add Collection</Text>\n        <TextInput\n          style={styles.text_box}\n          placeholder=\"Collection name\"\n          defaultValue={name}\n          onChangeText={(new_name)=> name_chg(new_name)}\n          />\n        <TextInput\n          style={styles.text_box}\n          defaultValue={desc}\n          onChangeText={(new_desc)=> desc_chg(new_desc)}\n          placeholder=\"Collection description\"\n        />\n        <View style={styles.btncontainer}>\n          <TouchableOpacity\n            style={styles.Sign_in_btn}\n            onPress={() => changeshowmodal(false)}\n          >\n            <Text style={styles.btn_label}>Cancel</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.Sign_in_btn}\n            onPress={() => add_coll_submit(name, desc)}\n          >\n            <Text style={styles.btn_label}>Add</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  modalcontainer: {},\n  modalform: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: 250,\n  },\n  header: {\n    fontSize: 20,\n  },\n  text_box: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#000\",\n    borderRadius: 10,\n    height: 45,\n    padding: 10,\n    margin: 10,\n    fontSize: 16,\n    width: 300,\n  },\n  btncontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: 300,\n  },\n  Sign_in_btn: {\n    backgroundColor: \"#a5a5a5\",\n    height: 50,\n    width: 130,\n    margin: 3,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    borderRadius: 15,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  btn_label: {\n    fontWeight: \"bold\",\n    fontSize: 15,\n    color: \"#fff\",\n  },\n});\n"
    ],
    "mappings": "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"
  },
  "metadata": {},
  "sourceType": "module"
}
