{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Camera, CameraType } from \"expo-camera\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(CameraType.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === \"granted\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return _jsx(View, {});\n  }\n\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Camera, {\n      style: styles.camera,\n      type: type,\n      children: _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            setType(type === CameraType.back ? CameraType.front : CameraType.back);\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \" Flip \"\n          })\n        })\n      })\n    })\n  });\n}\nvar styles = {\n  container: {},\n  camera: {},\n  buttonContainer: {},\n  button: {},\n  text: {}\n};","map":{"version":3,"names":["React","useState","useEffect","Camera","CameraType","App","hasPermission","setHasPermission","back","type","setType","requestCameraPermissionsAsync","status","styles","container","camera","buttonContainer","button","front","text"],"sources":["/home/panda/Desktop/Clients/Jaja or Junior/android-expo-app/client/screens/Camera.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\nimport { Camera, CameraType } from \"expo-camera\";\n\nexport default function App({}) {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [type, setType] = useState(CameraType.back);\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await Camera.requestCameraPermissionsAsync();\n      setHasPermission(status === \"granted\");\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return <View />;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n  return (\n    <View style={styles.container}>\n      <Camera style={styles.camera} type={type}>\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity\n            style={styles.button}\n            onPress={() => {\n              setType(\n                type === CameraType.back ? CameraType.front : CameraType.back\n              );\n            }}\n          >\n            <Text style={styles.text}> Flip </Text>\n          </TouchableOpacity>\n        </View>\n      </Camera>\n    </View>\n  );\n}\n\nconst styles = {\n  container: {},\n  camera: {},\n  buttonContainer: {},\n  button: {},\n  text: {},\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,aAAnC;;AAEA,eAAe,SAASC,GAAT,OAAiB;EAAA;;EAC9B,gBAA0CJ,QAAQ,CAAC,IAAD,CAAlD;EAAA;EAAA,IAAOK,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAAwBN,QAAQ,CAACG,UAAU,CAACI,IAAZ,CAAhC;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb;;EAEAR,SAAS,CAAC,YAAM;IACd,CAAC;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCAC0BC,MAAM,CAACQ,6BAAP,EAD1B;;YAAA;cAAA;cACSC,MADT,yBACSA,MADT;cAECL,gBAAgB,CAACK,MAAM,KAAK,SAAZ,CAAhB;;YAFD;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAD;EAID,CALQ,EAKN,EALM,CAAT;;EAOA,IAAIN,aAAa,KAAK,IAAtB,EAA4B;IAC1B,OAAO,KAAC,IAAD,KAAP;EACD;;EACD,IAAIA,aAAa,KAAK,KAAtB,EAA6B;IAC3B,OAAO,KAAC,IAAD;MAAA;IAAA,EAAP;EACD;;EACD,OACE,KAAC,IAAD;IAAM,KAAK,EAAEO,MAAM,CAACC,SAApB;IAAA,UACE,KAAC,MAAD;MAAQ,KAAK,EAAED,MAAM,CAACE,MAAtB;MAA8B,IAAI,EAAEN,IAApC;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAEI,MAAM,CAACG,eAApB;QAAA,UACE,KAAC,gBAAD;UACE,KAAK,EAAEH,MAAM,CAACI,MADhB;UAEE,OAAO,EAAE,mBAAM;YACbP,OAAO,CACLD,IAAI,KAAKL,UAAU,CAACI,IAApB,GAA2BJ,UAAU,CAACc,KAAtC,GAA8Cd,UAAU,CAACI,IADpD,CAAP;UAGD,CANH;UAAA,UAQE,KAAC,IAAD;YAAM,KAAK,EAAEK,MAAM,CAACM,IAApB;YAAA;UAAA;QARF;MADF;IADF;EADF,EADF;AAkBD;AAED,IAAMN,MAAM,GAAG;EACbC,SAAS,EAAE,EADE;EAEbC,MAAM,EAAE,EAFK;EAGbC,eAAe,EAAE,EAHJ;EAIbC,MAAM,EAAE,EAJK;EAKbE,IAAI,EAAE;AALO,CAAf"},"metadata":{},"sourceType":"module"}