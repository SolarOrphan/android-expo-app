{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { React, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar logo = require(\"../assets/img/logo.png\");\n\nexport default function CreateAccount(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      username_chg = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      password_chg = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirm = _useState6[0],\n      confirm_chg = _useState6[1];\n\n  var create_submit = function _callee2(username, password) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(username > \"\" && password > \"\" && confirm > \"\" && confirm == password)) {\n              _context2.next = 5;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"http://192.168.0.158:3000/user\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                username: username,\n                password: password\n              })\n            }).then(function _callee(response) {\n              var res;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _regeneratorRuntime.awrap(response.json());\n\n                    case 2:\n                      res = _context.sent;\n\n                      if (res.message == \"Success\") {\n                        username_chg(\"\");\n                        password_chg(\"\");\n                        confirm_chg(\"\");\n                        navigation.navigate(\"Login\");\n                      } else if (res.message == \"User already exists\") console.log(\"exist\");\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (error) {\n              console.error(error);\n            }));\n\n          case 3:\n            _context2.next = 6;\n            break;\n\n          case 5:\n            return _context2.abrupt(\"return\", null);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.top_section,\n      children: _jsx(Image, {\n        source: logo,\n        style: styles.logo\n      })\n    }), _jsxs(View, {\n      style: styles.bottom_section,\n      children: [_jsx(Text, {\n        style: styles.header,\n        children: \"Create Account\"\n      }), _jsx(Text, {\n        style: styles.msg,\n        children: \"Please enter your details to create your account.\"\n      }), _jsx(TextInput, {\n        style: styles.text_box,\n        placeholder: \"Username\",\n        defaultValue: username,\n        onChangeText: function onChangeText(new_username) {\n          return username_chg(new_username);\n        }\n      }), _jsx(TextInput, {\n        style: styles.text_box,\n        placeholder: \"Password\",\n        defaultValue: password,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(new_password) {\n          return password_chg(new_password);\n        }\n      }), _jsx(TextInput, {\n        style: styles.text_box,\n        secureTextEntry: true,\n        placeholder: \"Confirm password\",\n        defaultValue: confirm,\n        onChangeText: function onChangeText(new_confirm) {\n          return confirm_chg(new_confirm);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.Sign_in_btn,\n        onPress: function onPress() {\n          return create_submit(username, password, confirm);\n        },\n        children: _jsx(Text, {\n          style: styles.btn_label,\n          children: \"CREATE ACCOUNT\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.forgot_btn,\n        children: _jsx(Text, {\n          style: styles.forgot_btn_label,\n          children: \"Forgot Passowrd\"\n        })\n      })]\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#11b8f5\",\n    justifyContent: \"center\",\n    padding: 20,\n    display: \"flex\"\n  },\n  top_section: {},\n  bottom_section: {\n    backgroundColor: \"#fff\",\n    marginTop: 20,\n    padding: 10,\n    borderRadius: 10\n  },\n  logo: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    borderRadius: 50\n  },\n  header: {\n    textAlign: \"center\",\n    fontSize: 25,\n    fontWeight: \"bold\"\n  },\n  msg: {\n    textAlign: \"center\",\n    fontSize: 17\n  },\n  text_box: {\n    backgroundColor: \"#a7a7a7\",\n    color: \"#000\",\n    borderRadius: 10,\n    height: 45,\n    padding: 10,\n    margin: 10,\n    fontSize: 16\n  },\n  Sign_in_btn: {\n    backgroundColor: \"#f00\",\n    height: 50,\n    width: 180,\n    margin: 3,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    borderRadius: 15,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  btn_label: {\n    fontWeight: \"bold\",\n    fontSize: 15,\n    color: \"#fff\"\n  },\n  forgot_btn_label: {\n    fontWeight: \"100\",\n    fontSize: 15,\n    color: \"#59d3ff\",\n    textAlign: \"center\"\n  }\n});",
  "map": {
    "version": 3,
    "names": [
      "StatusBar",
      "React",
      "useState",
      "logo",
      "require",
      "CreateAccount",
      "navigation",
      "username",
      "username_chg",
      "password",
      "password_chg",
      "confirm",
      "confirm_chg",
      "create_submit",
      "fetch",
      "method",
      "headers",
      "Accept",
      "body",
      "JSON",
      "stringify",
      "then",
      "response",
      "json",
      "res",
      "message",
      "navigate",
      "console",
      "log",
      "catch",
      "error",
      "styles",
      "container",
      "top_section",
      "bottom_section",
      "header",
      "msg",
      "text_box",
      "new_username",
      "new_password",
      "new_confirm",
      "Sign_in_btn",
      "btn_label",
      "forgot_btn",
      "forgot_btn_label",
      "StyleSheet",
      "create",
      "flex",
      "backgroundColor",
      "justifyContent",
      "padding",
      "display",
      "marginTop",
      "borderRadius",
      "marginLeft",
      "marginRight",
      "textAlign",
      "fontSize",
      "fontWeight",
      "color",
      "height",
      "margin",
      "width",
      "alignItems"
    ],
    "sources": [
      "/home/panda/Desktop/Dev/android app dev/android_expo_app/client/screens/CreateAccount.js"
    ],
    "sourcesContent": [
      "import { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Image,\n} from \"react-native\";\nimport { React, useState } from \"react\";\n\nconst logo = require(\"../assets/img/logo.png\");\n\nexport default function CreateAccount({ navigation }) {\n  const [username, username_chg] = useState(\"\");\n  const [password, password_chg] = useState(\"\");\n  const [confirm, confirm_chg] = useState(\"\");\n  const create_submit = async (username, password) => {\n    if (username > \"\" && password > \"\" && confirm > \"\" && confirm == password)\n    await fetch(\"http://192.168.0.158:3000/user\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    })\n      .then(async (response) => {\n        let res = await response.json();\n        if (res.message == \"Success\") {\n          username_chg(\"\")\n          password_chg(\"\")\n          confirm_chg(\"\")\n          navigation.navigate(\"Login\");\n        }\n        else if (res.message == \"User already exists\") console.log(\"exist\");\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n      else\n      return null\n  };\n  return (\n    <View style={styles.container}>\n      <View style={styles.top_section}>\n        <Image source={logo} style={styles.logo} />\n      </View>\n      <View style={styles.bottom_section}>\n        <Text style={styles.header}>Create Account</Text>\n        <Text style={styles.msg}>\n          Please enter your details to create your account.\n        </Text>\n        <TextInput\n          style={styles.text_box}\n          placeholder=\"Username\"\n          defaultValue={username}\n          onChangeText={(new_username) => username_chg(new_username)}\n        />\n        <TextInput\n          style={styles.text_box}\n          placeholder=\"Password\"\n          defaultValue={password}\n          secureTextEntry={true}\n          onChangeText={(new_password) => password_chg(new_password)}\n          />\n        <TextInput\n          style={styles.text_box}\n          secureTextEntry={true}\n          placeholder=\"Confirm password\"\n          defaultValue={confirm}\n          onChangeText={(new_confirm) => confirm_chg(new_confirm)}\n        />\n        <TouchableOpacity\n          style={styles.Sign_in_btn}\n          onPress={() => create_submit(username, password, confirm)}\n        >\n          <Text style={styles.btn_label}>CREATE ACCOUNT</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.forgot_btn}>\n          <Text style={styles.forgot_btn_label}>Forgot Passowrd</Text>\n        </TouchableOpacity>\n      </View>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#11b8f5\",\n    justifyContent: \"center\",\n    padding: 20,\n    display: \"flex\",\n  },\n  top_section: {\n    // backgroundColor: \"\",\n  },\n  bottom_section: {\n    backgroundColor: \"#fff\",\n    marginTop: 20,\n    padding: 10,\n    borderRadius: 10,\n  },\n  logo: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    borderRadius: 50,\n  },\n  header: {\n    textAlign: \"center\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n  },\n  msg: {\n    textAlign: \"center\",\n    fontSize: 17,\n  },\n  text_box: {\n    backgroundColor: \"#a7a7a7\",\n    color: \"#000\",\n    borderRadius: 10,\n    height: 45,\n    padding: 10,\n    margin: 10,\n    fontSize: 16,\n  },\n  Sign_in_btn: {\n    backgroundColor: \"#f00\",\n    height: 50,\n    width: 180,\n    margin: 3,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    borderRadius: 15,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  btn_label: {\n    fontWeight: \"bold\",\n    fontSize: 15,\n    color: \"#fff\",\n  },\n  forgot_btn_label: {\n    fontWeight: \"100\",\n    fontSize: 15,\n    color: \"#59d3ff\",\n    textAlign: \"center\",\n  },\n});\n"
    ],
    "mappings": "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"
  },
  "metadata": {},
  "sourceType": "module"
}
